version: 2.1

orbs:
  python: circleci/python@1.4.0
  docker: circleci/docker@1.7.0

jobs:
  build_and_test:
    docker:
      - image: circleci/python:3.9
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
          pip-dependency-file: requirements.txt
      - run:
          name: Run Linting
          command: |
            flake8
      - run:
          name: Run Unit Tests
          command: |
            pytest --html=test_reports/pytest_report.html
      - store_test_results:
          path: test_reports
      - store_artifacts:
          path: test_reports

  containerization:
    docker:
      - image: circleci/python:3.9
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build and push Docker image
          command: |
            docker build -t $DOCKER_LOGIN/ocl:$CIRCLE_SHA1 .
            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
            docker push $DOCKER_LOGIN/ocl:$CIRCLE_SHA1

  deploy_production:
      machine: true
      steps:
        - checkout
        - run:
            name: Build and push Docker image to Heroku
            command: |
              sudo curl https://cli-assets.heroku.com/install.sh | sh
              HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:login
              HEROKU_API_KEY=${HEROKU_TOKEN} heroku config:set SECRET_KEY=${SECRET_KEY} -a ${HEROKU_APP}
              HEROKU_API_KEY=${HEROKU_TOKEN} heroku config:set SENTRY_DSN=${SENTRY_DSN} -a ${HEROKU_APP}
              HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:push -a ${HEROKU_APP} web
              HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:release -a ${HEROKU_APP} web

workflows:
  build_test_deploy:
    jobs:
      - build_and_test:
          filters:
            branches:
              only: main
      - containerization:
          requires:
            - build_and_test
          filters:
            branches:
              only: main
      - deploy_production:
          requires:
            - containerization
          filters:
            branches:
              only: main
